:set number	" show line numbers
:set rnu	" show relative line numbers
:set laststatus=2 " always show status line
:set ignorecase	" enable ignorecase for search
:set smartcase	" enable smartcase (lowercase search = case insensitive search)
:set cul	" enable cursorline (underline below current line for easy spotting)
:set hlsearch " enable search items to be highlighed
:se nostartofline " keep cursor position when switching buffers
:set showcmd " Show (partial) command in the last line of the screen.
:set textwidth=80 " wrap text at 80 chars when typing

"""""""""""""""""""" COLOURS """"""""""""""""""""
:set background=dark "needed for st term
""" 80 char limit highlighting """
""" either this
" highlight lines that are longer than 80 chars
" https://stackoverflow.com/a/235970
"highlight OverLength cterm=bold ctermbg=darkblue
"match OverLength /\%81v.\+/
""" OR this
" colour the 81st col
:set cc=81
highlight colorcolumn ctermbg=darkblue
" highlight for mathcing parathesis (brackets)
highlight MatchParen cterm=bold ctermbg=darkred ctermfg=yellow

" set syntax highlighting on
syntax on

set nocp	" needed for Align script -- https://www.vim.org/scripts/script.php?script_id=294
filetype plugin on

" do not wrap search at end of file
:set nowrapscan


" set your path variable to current directory (from which you launched vim)
" and to all directories under current directory recursively.
set path=$PWD/**

" _____ Japanese characters ___ BEGIN
set encoding=utf-8
set fileencodings=utf-8
set fileformats=unix,dos,mac
" _____ Japanese characters ___ END

" _____ vim-plug ____ BEGIN
" Specify a directory for plugins
" - Avoid using standard Vim directory names like 'plugin'
" call plug#begin('~/.vim/plugged')
" Make sure you use single quotes
" Plug 'preservim/nerdcommenter'
" Shorthand notation; fetches https://github.com/junegunn/vim-easy-align
" Plug 'junegunn/vim-easy-align'
" call plug#end()
" _____ vim-plug ____ END

" _____ vim-easy-align ____ BEGIN
" Start interactive EasyAlign in visual mode (e.g. vipga)
" xmap ga <Plug>(EasyAlign)
" Start interactive EasyAlign for a motion/text object (e.g. gaip)
" nmap ga <Plug>(EasyAlign)
" _____ vim-easy-align ____ END

" see list of all vi keybindings
" https://hea-www.harvard.edu/~fine/Tech/vi.html

" _____ buffer remaps  ____ BEGIN

" :nnoremap ,b :ls<CR>:buffer<Space>
nmap <C-A> :buffers<CR>:buffer<Space>	" show buffer list
nmap <C-P> :bp<CR>	" previous buffer
nmap <C-N> :bn<CR>	" next buffer
nmap <C-M> <C-^>	" modified buffer
:set hidden "allow to swtich buffers without saving
" _____ buffer remaps  ____ END

" _____ mark remaps  ____ BEGIN
" remapping mark seekers (for easy access on Japanese keyboard)
" :nnoremap - '
" :onoremap - '
" :nnoremap ^ `
" :onoremap ^ `
" _____ mark remaps  ____ BEGIN

" remap for find and replace global with confirmation
nnoremap <F3> :%s/<C-r><C-w>/
" remap for find word under cursor and replace global with confirmation (not
" working)
" nnoremap <F4> :%s/<C-W>/<C-W>/gc

" clear search highlight
" :nnoremap <F5> :noh<CR>
:nnoremap cs :noh<CR>


" _____ Tabs and indents ____ BEGIN
set tabstop=4
set softtabstop=4
set shiftwidth=4
" _____ Tabs and indents ____ END

" _____ buffer views ____ BEGIN
" this is useful for saving folds
"augroup remember_folds
"  autocmd!
"  autocmd BufWinLeave * mkview
"  autocmd BufWinEnter * silent! loadview
"augroup END
" _____ buffer views ____ END

" function to remove white spaces from entire file
" https://vi.stackexchange.com/questions/454/whats-the-simplest-way-to-strip-trailing-whitespace-from-all-lines-in-a-file/456#456?newreg=c8bacd9c56b44f999648c5b73d8386fe
fun! WhiteSpaceRemove()
	let l:save = winsaveview()
	keeppatterns %s/\s\+$//e
	call winrestview(l:save)
endfun
