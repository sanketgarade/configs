:set number	" show line numbers
:set rnu	" show relative line numbers
:set ruler	" show ruler (line and column number)
":set ++ffs=dos	" fileformat = dos (use CRLF for line endings)
:set ignorecase	" enable ignorecase for search
:set smartcase	" enable smartcase (lowercase search = case insensitive search)
:set cul	" enable cursorline (underline below current line for easy spotting)
:set hlsearch " enable search items to be highlighed
:se nostartofline " keep cursor position when switching buffers
hi MatchParen cterm=bold ctermbg=darkred ctermfg=yellow
"set nocp
filetype plugin on

" set syntax highlighting on
syntax on

" always show status line
set laststatus=2

" set your path variable to current directory (from which you launched vim)
" and to all directories under current directory recursively.
set path=$PWD/**
" set nowrap

" _____ Japanese characters ___ BEGIN
set encoding=utf-8
set fileencodings=iso-2022-jp,euc-jp,sjis,utf-8
set fileformats=unix,dos,mac
" _____ Japanese characters ___ END

" _____ vim-plug ____ BEGIN
" Specify a directory for plugins
" - Avoid using standard Vim directory names like 'plugin'
" call plug#begin('~/.vim/plugged')
" Make sure you use single quotes
" Plug 'preservim/nerdcommenter'
" Shorthand notation; fetches https://github.com/junegunn/vim-easy-align
" Plug 'junegunn/vim-easy-align'
" call plug#end()
" _____ vim-plug ____ END

" see list of all vi keybindings
" https://hea-www.harvard.edu/~fine/Tech/vi.html

" _____ buffer remaps  ____ BEGIN

" :nnoremap ,b :ls<CR>:buffer<Space>
nmap <C-A> :buffers<CR>:buffer<Space>	" show buffer list
nmap <C-P> :bp<CR>	" previous buffer
nmap <C-N> :bn<CR>	" next buffer
nmap <C-M> <C-^>	" modified buffer
:set hidden "allow to swtich buffers without saving
" _____ buffer remaps  ____ END

" _____ mark remaps  ____ BEGIN
" remapping mark seekers (for easy access on Japanese keyboard)
:nnoremap - '
:onoremap - '
:nnoremap ^ `
:onoremap ^ `
" _____ mark remaps  ____ BEGIN

" remap for find and replace global with confirmation
nnoremap <F3> :%s/<C-r><C-w>/
" remap for find word under cursor and replace global with confirmation (NOT WORKING)
" nnoremap <F4> :%s/<C-W>/<C-W>/gc

" clear search highlight
" :nnoremap <F5> :noh<CR>
:nnoremap cs :noh<CR>" clear search highlight


" _____ Tabs and indents ____ BEGIN
set tabstop=4
set softtabstop=4
set shiftwidth=4
" _____ Tabs and indents ____ END

" _____ buffer views ____ BEGIN
" this is useful for saving folds
"augroup remember_folds
"  autocmd!
"  autocmd BufWinLeave * mkview
"  autocmd BufWinEnter * silent! loadview
"augroup END
" _____ buffer views ____ END

" function to remove white spaces from entire file
" https://vi.stackexchange.com/questions/454/whats-the-simplest-way-to-strip-trailing-whitespace-from-all-lines-in-a-file/456#456?newreg=c8bacd9c56b44f999648c5b73d8386fe
fun! WhiteSpaceRemove()
	let l:save = winsaveview()
	keeppatterns %s/\s\+$//e
	call winrestview(l:save)
endfun
